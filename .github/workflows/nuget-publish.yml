name: Publish NuGet Package

on:
  release:
    types: [published]

jobs:

  unit-tests:
    name: Run Unit Tests
    runs-on: ubuntu-latest

    steps:
    - name: Checkout code
      uses: actions/checkout@v3

    - name: Setup .NET
      uses: actions/setup-dotnet@v3
      with:
        dotnet-version: '8.0'

    - name: Restore dependencies
      run: dotnet restore ./Deface.NET/tests/Deface.NET.UnitTests

    - name: Run Unit Tests
      run: dotnet test ./Deface.NET/tests/Deface.NET.UnitTests --no-restore --verbosity normal

  integration-tests:
    name: Run Integration Tests
    runs-on: ubuntu-latest
    needs: unit-tests

    steps:
    - name: Checkout code
      uses: actions/checkout@v3

    - name: Setup .NET
      uses: actions/setup-dotnet@v3
      with:
        dotnet-version: '8.0'

    - name: Install FFmpeg
      uses: federicocarboni/setup-ffmpeg@v3

    - name: Restore dependencies
      run: dotnet restore ./Deface.NET/tests/Deface.NET.IntegrationTests

    - name: Run Integration Tests
      run: dotnet test ./Deface.NET/tests/Deface.NET.IntegrationTests --no-restore --verbosity normal

  publish:
    runs-on: ubuntu-latest
    needs: integration-tests

    steps:
    - name: Checkout repository
      uses: actions/checkout@v4

    - name: Setup .NET SDK
      uses: actions/setup-dotnet@v3
      with:
        dotnet-version: '8.0'

    - name: Restore dependencies
      run: dotnet restore ./Deface.NET/Deface.NET

    - name: Build the project
      run: dotnet build ./Deface.NET/Deface.NET --configuration Release --no-restore

    - name: Pack the project
      run: dotnet pack ./Deface.NET/Deface.NET --configuration Release --no-build --output nupkg /p:Version=${{ github.event.release.tag_name }}
      
    - name: Publish to NuGet
      run: dotnet nuget push nupkg/*.nupkg --api-key ${{ secrets.NUGET_API_KEY }} --source https://api.nuget.org/v3/index.json --skip-duplicate
